apiVersion: v1
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"name":"services"}}
    creationTimestamp: "2021-09-16T04:24:54Z"
    name: services
    resourceVersion: "74163410"
    uid: b7845fd1-a2a4-4516-a804-4701d56cfefc
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"jenkins-controller","app.kubernetes.io/instance":"tom","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"jenkins","helm.sh/chart":"jenkins-3.5.18"},"name":"gke-tom-jenkins","namespace":"services"}}
    creationTimestamp: "2021-09-20T22:40:40Z"
    labels:
      app.kubernetes.io/component: jenkins-controller
      app.kubernetes.io/instance: tom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: jenkins
      helm.sh/chart: jenkins-3.5.18
    name: gke-tom-jenkins
    namespace: services
    resourceVersion: "76625645"
    uid: 3b715f2e-32f7-45bd-b616-e8826b63d578
  secrets:
  - name: gke-tom-jenkins-token-fs87m
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"jenkins-controller","app.kubernetes.io/instance":"tom","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"jenkins","helm.sh/chart":"jenkins-3.5.18"},"name":"gke-tom-jenkins-casc-reload","namespace":"services"},"rules":[{"apiGroups":[""],"resources":["configmaps"],"verbs":["get","watch","list"]}]}
    creationTimestamp: "2021-09-20T22:40:40Z"
    labels:
      app.kubernetes.io/component: jenkins-controller
      app.kubernetes.io/instance: tom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: jenkins
      helm.sh/chart: jenkins-3.5.18
    name: gke-tom-jenkins-casc-reload
    namespace: services
    resourceVersion: "76625656"
    uid: 1000ed07-a727-418e-83cd-65c9d5766e51
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - watch
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"jenkins-controller","app.kubernetes.io/instance":"tom","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"jenkins","helm.sh/chart":"jenkins-3.5.18"},"name":"gke-tom-jenkins-schedule-agents","namespace":"services"},"rules":[{"apiGroups":[""],"resources":["pods","pods/exec","pods/log","persistentvolumeclaims","events"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["pods","pods/exec","persistentvolumeclaims"],"verbs":["create","delete","deletecollection","patch","update"]}]}
    creationTimestamp: "2021-09-20T22:40:41Z"
    labels:
      app.kubernetes.io/component: jenkins-controller
      app.kubernetes.io/instance: tom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: jenkins
      helm.sh/chart: jenkins-3.5.18
    name: gke-tom-jenkins-schedule-agents
    namespace: services
    resourceVersion: "76625659"
    uid: ddd1243b-adb0-424f-8472-bf1f4ab3b607
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/exec
    - pods/log
    - persistentvolumeclaims
    - events
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/exec
    - persistentvolumeclaims
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"jenkins-controller","app.kubernetes.io/instance":"tom","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"jenkins","helm.sh/chart":"jenkins-3.5.18"},"name":"gke-tom-jenkins-schedule-agents","namespace":"services"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"gke-tom-jenkins-schedule-agents"},"subjects":[{"kind":"ServiceAccount","name":"gke-tom-jenkins","namespace":"services"}]}
    creationTimestamp: "2021-09-20T22:40:42Z"
    labels:
      app.kubernetes.io/component: jenkins-controller
      app.kubernetes.io/instance: tom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: jenkins
      helm.sh/chart: jenkins-3.5.18
    name: gke-tom-jenkins-schedule-agents
    namespace: services
    resourceVersion: "76625668"
    uid: c89ed2b0-2bef-4259-bbb9-73473f3cb849
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: gke-tom-jenkins-schedule-agents
  subjects:
  - kind: ServiceAccount
    name: gke-tom-jenkins
    namespace: services
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"jenkins-controller","app.kubernetes.io/instance":"tom","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"jenkins","helm.sh/chart":"jenkins-3.5.18"},"name":"gke-tom-jenkins-watch-configmaps","namespace":"services"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"gke-tom-jenkins-casc-reload"},"subjects":[{"kind":"ServiceAccount","name":"gke-tom-jenkins","namespace":"services"}]}
    creationTimestamp: "2021-09-20T22:40:43Z"
    labels:
      app.kubernetes.io/component: jenkins-controller
      app.kubernetes.io/instance: tom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: jenkins
      helm.sh/chart: jenkins-3.5.18
    name: gke-tom-jenkins-watch-configmaps
    namespace: services
    resourceVersion: "76625672"
    uid: 25d5547d-2680-4243-8e6c-c5262137b553
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: gke-tom-jenkins-casc-reload
  subjects:
  - kind: ServiceAccount
    name: gke-tom-jenkins
    namespace: services
- apiVersion: v1
  data:
    apply_config.sh: |-
      set -e
      echo "disable Setup Wizard"
      # Prevent Setup Wizard when JCasC is enabled
      echo $JENKINS_VERSION > /var/jenkins_home/jenkins.install.UpgradeWizard.state
      echo $JENKINS_VERSION > /var/jenkins_home/jenkins.install.InstallUtil.lastExecVersion
      echo "download plugins"
      # Install missing plugins
      cp /var/jenkins_config/plugins.txt /var/jenkins_home;
      rm -rf /usr/share/jenkins/ref/plugins/*.lock
      version () { echo "$@" | awk -F. '{ printf("%d%03d%03d%03d\n", $1,$2,$3,$4); }'; }
      if [ -f "/usr/share/jenkins/jenkins.war" ] && [ -n "$(command -v jenkins-plugin-cli)" 2>/dev/null ] && [ $(version $(jenkins-plugin-cli --version)) -ge $(version "2.1.1") ]; then
        jenkins-plugin-cli --verbose --war "/usr/share/jenkins/jenkins.war" --plugin-file "/var/jenkins_home/plugins.txt" --latest true;
      else
        /usr/local/bin/install-plugins.sh `echo $(cat /var/jenkins_home/plugins.txt)`;
      fi
      echo "copy plugins to shared volume"
      # Copy plugins to shared volume
      yes n | cp -i /usr/share/jenkins/ref/plugins/* /var/jenkins_plugins/;
      echo "finished initialization"
    plugins.txt: |-
      audit-trail:latest
      build-history-metrics-plugin:latest
      configuration-as-code:latest
      credentials-binding:latest
      git:latest
      google-login:latest
      google-metadata-plugin:latest
      google-oauth-plugin:latest
      kubernetes:latest
      workflow-job:latest
      workflow-aggregator:latest
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"apply_config.sh":"set -e\necho \"disable Setup Wizard\"\n# Prevent Setup Wizard when JCasC is enabled\necho $JENKINS_VERSION \u003e /var/jenkins_home/jenkins.install.UpgradeWizard.state\necho $JENKINS_VERSION \u003e /var/jenkins_home/jenkins.install.InstallUtil.lastExecVersion\necho \"download plugins\"\n# Install missing plugins\ncp /var/jenkins_config/plugins.txt /var/jenkins_home;\nrm -rf /usr/share/jenkins/ref/plugins/*.lock\nversion () { echo \"$@\" | awk -F. '{ printf(\"%d%03d%03d%03d\\n\", $1,$2,$3,$4); }'; }\nif [ -f \"/usr/share/jenkins/jenkins.war\" ] \u0026\u0026 [ -n \"$(command -v jenkins-plugin-cli)\" 2\u003e/dev/null ] \u0026\u0026 [ $(version $(jenkins-plugin-cli --version)) -ge $(version \"2.1.1\") ]; then\n  jenkins-plugin-cli --verbose --war \"/usr/share/jenkins/jenkins.war\" --plugin-file \"/var/jenkins_home/plugins.txt\" --latest true;\nelse\n  /usr/local/bin/install-plugins.sh `echo $(cat /var/jenkins_home/plugins.txt)`;\nfi\necho \"copy plugins to shared volume\"\n# Copy plugins to shared volume\nyes n | cp -i /usr/share/jenkins/ref/plugins/* /var/jenkins_plugins/;\necho \"finished initialization\"","plugins.txt":"audit-trail:latest\nbuild-history-metrics-plugin:latest\nconfiguration-as-code:latest\ncredentials-binding:latest\ngit:latest\ngoogle-login:latest\ngoogle-metadata-plugin:latest\ngoogle-oauth-plugin:latest\nkubernetes:latest\nworkflow-job:latest\nworkflow-aggregator:latest"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"jenkins-controller","app.kubernetes.io/instance":"tom","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"jenkins"},"name":"gke-tom-jenkins","namespace":"services"}}
    creationTimestamp: "2021-09-20T22:40:44Z"
    labels:
      app.kubernetes.io/component: jenkins-controller
      app.kubernetes.io/instance: tom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: jenkins
    name: gke-tom-jenkins
    namespace: services
    resourceVersion: "77158833"
    uid: 157827a9-05e8-4222-92ae-42bf242a4b26
- apiVersion: v1
  data:
    jcasc-default-config.yaml: |
      jenkins:
        authorizationStrategy:
          globalMatrix:
            permissions:
            - "Overall/Read:authenticated"
            - "Credentials/View:authenticated"
            - "Job/Build:authenticated"
            - "Job/Cancel:authenticated"
            - "Job/Read:authenticated"
            - "Run/Update:authenticated"
            - "View/Read:authenticated"
            - "Overall/Administer:tflanig1@gmail.com"
        crumbIssuer:
          standard:
            excludeClientIPFromCrumb: false
        disableRememberMe: false
        markupFormatter: "plainText"
        quietPeriod: 5
        remotingSecurity:
          enabled: true
        mode: NORMAL
        numExecutors: 0
        projectNamingStrategy: "standard"
      security:
        apiToken:
          creationOfLegacyTokenEnabled: false
          tokenGenerationOnCreationEnabled: false
          usageStatisticsEnabled: true
      unclassified:
        location:
          adminAddress: "tflanig1@gmail.com"
          url: https://services.thomasflanigan.com/
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"jcasc-default-config.yaml":"jenkins:\n  authorizationStrategy:\n    globalMatrix:\n      permissions:\n      - \"Overall/Read:authenticated\"\n      - \"Credentials/View:authenticated\"\n      - \"Job/Build:authenticated\"\n      - \"Job/Cancel:authenticated\"\n      - \"Job/Read:authenticated\"\n      - \"Run/Update:authenticated\"\n      - \"View/Read:authenticated\"\n      - \"Overall/Administer:tflanig1@gmail.com\"\n  crumbIssuer:\n    standard:\n      excludeClientIPFromCrumb: false\n  disableRememberMe: false\n  markupFormatter: \"plainText\"\n  quietPeriod: 5\n  remotingSecurity:\n    enabled: true\n  mode: NORMAL\n  numExecutors: 0\n  projectNamingStrategy: \"standard\"\nsecurity:\n  apiToken:\n    creationOfLegacyTokenEnabled: false\n    tokenGenerationOnCreationEnabled: false\n    usageStatisticsEnabled: true\nunclassified:\n  location:\n    adminAddress: \"tflanig1@gmail.com\"\n    url: https://services.thomasflanigan.com/\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"jenkins-controller","app.kubernetes.io/instance":"tom","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"jenkins","helm.sh/chart":"jenkins-3.5.18","tom-jenkins-jenkins-config":"true"},"name":"gke-tom-jenkins-jenkins-jcasc-config","namespace":"services"}}
    creationTimestamp: "2021-09-20T22:40:44Z"
    labels:
      app.kubernetes.io/component: jenkins-controller
      app.kubernetes.io/instance: tom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: jenkins
      helm.sh/chart: jenkins-3.5.18
      tom-jenkins-jenkins-config: "true"
    name: gke-tom-jenkins-jenkins-jcasc-config
    namespace: services
    resourceVersion: "77158834"
    uid: b68d955b-f824-431c-b5f4-9a3e162ee960
- apiVersion: v1
  data:
    run.sh: |-
      @test "Testing Jenkins UI is accessible" {
        curl --retry 48 --retry-delay 10 tom-jenkins:8080/login
      }
  kind: ConfigMap
  metadata:
    annotations:
      helm.sh/hook: test
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"run.sh":"@test \"Testing Jenkins UI is accessible\" {\n  curl --retry 48 --retry-delay 10 tom-jenkins:8080/login\n}"},"kind":"ConfigMap","metadata":{"annotations":{"helm.sh/hook":"test"},"name":"gke-tom-jenkins-tests","namespace":"services"}}
    creationTimestamp: "2021-09-20T22:40:45Z"
    name: gke-tom-jenkins-tests
    namespace: services
    resourceVersion: "76625688"
    uid: 93eaeebf-0b00-4341-9cc9-018302ae423f
- apiVersion: v1
  data:
    jenkins-admin-password: Yjd4VTRNVEFOT3dMdTIyU3Qwa1VHOA==
    jenkins-admin-user: YWRtaW4=
  kind: Secret
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"jenkins-admin-password":"Yjd4VTRNVEFOT3dMdTIyU3Qwa1VHOA==","jenkins-admin-user":"YWRtaW4="},"kind":"Secret","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"jenkins-controller","app.kubernetes.io/instance":"tom","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"jenkins","helm.sh/chart":"jenkins-3.5.18"},"name":"gke-tom-jenkins","namespace":"services"},"type":"Opaque"}
    creationTimestamp: "2021-09-20T22:40:46Z"
    labels:
      app.kubernetes.io/component: jenkins-controller
      app.kubernetes.io/instance: tom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: jenkins
      helm.sh/chart: jenkins-3.5.18
    name: gke-tom-jenkins
    namespace: services
    resourceVersion: "76625697"
    uid: 0837f19b-2743-403c-8677-611ff1244953
  type: Opaque
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      beta.cloud.google.com/backend-config: '{"default": "svcs-ingress-be"}'
      cloud.google.com/neg: '{"ingress":true}'
      cloud.google.com/neg-status: '{"network_endpoint_groups":{"8080":"k8s1-3e771f24-services-gke-tom-jenkins-8080-ecd4af05"},"zones":["us-central1-c"]}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"beta.cloud.google.com/backend-config":"{\"default\": \"svcs-ingress-be\"}"},"labels":{"app.kubernetes.io/component":"jenkins-controller","app.kubernetes.io/instance":"tom","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"jenkins","helm.sh/chart":"jenkins-3.5.18"},"name":"gke-tom-jenkins","namespace":"services"},"spec":{"ports":[{"name":"http","port":8080,"targetPort":8080}],"selector":{"app.kubernetes.io/component":"jenkins-controller","app.kubernetes.io/instance":"tom"},"type":"NodePort"}}
    creationTimestamp: "2021-09-20T23:18:38Z"
    labels:
      app.kubernetes.io/component: jenkins-controller
      app.kubernetes.io/instance: tom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: jenkins
      helm.sh/chart: jenkins-3.5.18
    name: gke-tom-jenkins
    namespace: services
    resourceVersion: "76738799"
    uid: 1274f53b-00c5-445d-8126-52d7d445342b
  spec:
    clusterIP: 10.60.14.86
    clusterIPs:
    - 10.60.14.86
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 32403
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/component: jenkins-controller
      app.kubernetes.io/instance: tom
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"jenkins-controller","app.kubernetes.io/instance":"tom","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"jenkins","helm.sh/chart":"jenkins-3.5.18"},"name":"gke-tom-jenkins-agent","namespace":"services"},"spec":{"ports":[{"name":"agent-listener","port":50000,"targetPort":50000}],"selector":{"app.kubernetes.io/component":"jenkins-controller","app.kubernetes.io/instance":"tom"},"type":"ClusterIP"}}
    creationTimestamp: "2021-09-20T22:40:48Z"
    labels:
      app.kubernetes.io/component: jenkins-controller
      app.kubernetes.io/instance: tom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: jenkins
      helm.sh/chart: jenkins-3.5.18
    name: gke-tom-jenkins-agent
    namespace: services
    resourceVersion: "76625708"
    uid: a5adf70b-c059-4d16-a010-efd0475a8456
  spec:
    clusterIP: 10.60.1.20
    clusterIPs:
    - 10.60.1.20
    ports:
    - name: agent-listener
      port: 50000
      protocol: TCP
      targetPort: 50000
    selector:
      app.kubernetes.io/component: jenkins-controller
      app.kubernetes.io/instance: tom
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"jenkins-controller","app.kubernetes.io/instance":"tom","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"jenkins","helm.sh/chart":"jenkins-3.5.18"},"name":"gke-tom-jenkins","namespace":"services"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"8Gi"}}}}
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
      volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/gce-pd
    creationTimestamp: "2021-09-20T22:40:48Z"
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app.kubernetes.io/component: jenkins-controller
      app.kubernetes.io/instance: tom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: jenkins
      helm.sh/chart: jenkins-3.5.18
    name: gke-tom-jenkins
    namespace: services
    resourceVersion: "76625747"
    uid: 62a2f9ac-e77e-4ae7-9a21-41ab1de00ea3
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 8Gi
    storageClassName: standard
    volumeMode: Filesystem
    volumeName: pvc-62a2f9ac-e77e-4ae7-9a21-41ab1de00ea3
  status:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 8Gi
    phase: Bound
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"jenkins-controller","app.kubernetes.io/instance":"tom","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"jenkins","helm.sh/chart":"jenkins-3.5.18"},"name":"gke-tom-jenkins","namespace":"services"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/component":"jenkins-controller","app.kubernetes.io/instance":"tom"}},"serviceName":"gke-tom-jenkins","template":{"metadata":{"annotations":{"checksum/config":"6e59b21e88943eb94337411fc892bc745e43a1becc8e20433471e8f3cbafb226"},"labels":{"app.kubernetes.io/component":"jenkins-controller","app.kubernetes.io/instance":"tom","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"jenkins"}},"spec":{"containers":[{"env":[{"name":"NAMESPACE","value":"","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"LABEL","value":"tom-jenkins-jenkins-config"},{"name":"FOLDER","value":"/var/jenkins_home/casc_configs"},{"name":"REQ_URL","value":"http://localhost:8080/reload-configuration-as-code/?casc-reload-token=$(POD_NAME)"},{"name":"REQ_METHOD","value":"POST"},{"name":"REQ_RETRY_CONNECT","value":"10"}],"image":"kiwigrid/k8s-sidecar:1.12.2","imagePullPolicy":"IfNotPresent","name":"config-reload","resources":{},"volumeMounts":[{"mountPath":"/var/jenkins_home/casc_configs","name":"sc-config-volume"},{"mountPath":"/var/jenkins_home","name":"jenkins-home"}]},{"args":["--httpPort=8080"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"JAVA_OPTS","value":"-Dcasc.reload.token=$(POD_NAME) "},{"name":"JENKINS_OPTS","value":""},{"name":"JENKINS_SLAVE_AGENT_PORT","value":"50000"},{"name":"CASC_JENKINS_CONFIG","value":"/var/jenkins_home/casc_configs"}],"image":"jenkins/jenkins:2.303.1-jdk11","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/login","port":"http"},"periodSeconds":10,"timeoutSeconds":5},"name":"jenkins","ports":[{"containerPort":8080,"name":"http"},{"containerPort":50000,"name":"agent-listener"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/login","port":"http"},"periodSeconds":10,"timeoutSeconds":5},"resources":{"limits":{"cpu":"2000m","memory":"4096Mi"},"requests":{"cpu":"50m","memory":"256Mi"}},"startupProbe":{"failureThreshold":12,"httpGet":{"path":"/login","port":"http"},"periodSeconds":10,"timeoutSeconds":5},"volumeMounts":[{"mountPath":"/var/jenkins_home","name":"jenkins-home","readOnly":false},{"mountPath":"/var/jenkins_config","name":"jenkins-config","readOnly":true},{"mountPath":"/usr/share/jenkins/ref/plugins/","name":"plugin-dir","readOnly":false},{"mountPath":"/var/jenkins_home/casc_configs","name":"sc-config-volume"},{"mountPath":"/run/secrets/chart-admin-username","name":"admin-secret","readOnly":true,"subPath":"jenkins-admin-user"},{"mountPath":"/run/secrets/chart-admin-password","name":"admin-secret","readOnly":true,"subPath":"jenkins-admin-password"}]}],"initContainers":[{"command":["sh","/var/jenkins_config/apply_config.sh"],"image":"jenkins/jenkins:2.303.1-jdk11","imagePullPolicy":"Always","name":"init","resources":{"limits":{"cpu":"2000m","memory":"4096Mi"},"requests":{"cpu":"50m","memory":"256Mi"}},"volumeMounts":[{"mountPath":"/var/jenkins_home","name":"jenkins-home"},{"mountPath":"/var/jenkins_config","name":"jenkins-config"},{"mountPath":"/usr/share/jenkins/ref/plugins","name":"plugins"},{"mountPath":"/var/jenkins_plugins","name":"plugin-dir"}]}],"securityContext":{"fsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"gke-tom-jenkins","volumes":[{"emptyDir":{},"name":"plugins"},{"configMap":{"name":"gke-tom-jenkins"},"name":"jenkins-config"},{"emptyDir":{},"name":"plugin-dir"},{"name":"jenkins-home","persistentVolumeClaim":{"claimName":"gke-tom-jenkins"}},{"emptyDir":{},"name":"sc-config-volume"},{"name":"admin-secret","secret":{"secretName":"gke-tom-jenkins"}}]}}}}
    creationTimestamp: "2021-09-20T22:40:49Z"
    generation: 3
    labels:
      app.kubernetes.io/component: jenkins-controller
      app.kubernetes.io/instance: tom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: jenkins
      helm.sh/chart: jenkins-3.5.18
    name: gke-tom-jenkins
    namespace: services
    resourceVersion: "77159116"
    uid: e63e16fc-4544-4899-b1a3-0bb7959ff061
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: jenkins-controller
        app.kubernetes.io/instance: tom
    serviceName: gke-tom-jenkins
    template:
      metadata:
        annotations:
          checksum/config: 6e59b21e88943eb94337411fc892bc745e43a1becc8e20433471e8f3cbafb226
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: jenkins-controller
          app.kubernetes.io/instance: tom
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: jenkins
      spec:
        containers:
        - env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: LABEL
            value: tom-jenkins-jenkins-config
          - name: FOLDER
            value: /var/jenkins_home/casc_configs
          - name: REQ_URL
            value: http://localhost:8080/reload-configuration-as-code/?casc-reload-token=$(POD_NAME)
          - name: REQ_METHOD
            value: POST
          - name: REQ_RETRY_CONNECT
            value: "10"
          image: kiwigrid/k8s-sidecar:1.12.2
          imagePullPolicy: IfNotPresent
          name: config-reload
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/jenkins_home/casc_configs
            name: sc-config-volume
          - mountPath: /var/jenkins_home
            name: jenkins-home
        - args:
          - --httpPort=8080
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: JAVA_OPTS
            value: '-Dcasc.reload.token=$(POD_NAME) '
          - name: JENKINS_OPTS
          - name: JENKINS_SLAVE_AGENT_PORT
            value: "50000"
          - name: CASC_JENKINS_CONFIG
            value: /var/jenkins_home/casc_configs
          image: jenkins/jenkins:2.303.1-jdk11
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /login
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: jenkins
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 50000
            name: agent-listener
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "2"
              memory: 4Gi
            requests:
              cpu: 50m
              memory: 256Mi
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /login
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/jenkins_home
            name: jenkins-home
          - mountPath: /var/jenkins_config
            name: jenkins-config
            readOnly: true
          - mountPath: /usr/share/jenkins/ref/plugins/
            name: plugin-dir
          - mountPath: /var/jenkins_home/casc_configs
            name: sc-config-volume
          - mountPath: /run/secrets/chart-admin-username
            name: admin-secret
            readOnly: true
            subPath: jenkins-admin-user
          - mountPath: /run/secrets/chart-admin-password
            name: admin-secret
            readOnly: true
            subPath: jenkins-admin-password
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - /var/jenkins_config/apply_config.sh
          image: jenkins/jenkins:2.303.1-jdk11
          imagePullPolicy: Always
          name: init
          resources:
            limits:
              cpu: "2"
              memory: 4Gi
            requests:
              cpu: 50m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/jenkins_home
            name: jenkins-home
          - mountPath: /var/jenkins_config
            name: jenkins-config
          - mountPath: /usr/share/jenkins/ref/plugins
            name: plugins
          - mountPath: /var/jenkins_plugins
            name: plugin-dir
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: gke-tom-jenkins
        serviceAccountName: gke-tom-jenkins
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: plugins
        - configMap:
            defaultMode: 420
            name: gke-tom-jenkins
          name: jenkins-config
        - emptyDir: {}
          name: plugin-dir
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: gke-tom-jenkins
        - emptyDir: {}
          name: sc-config-volume
        - name: admin-secret
          secret:
            defaultMode: 420
            secretName: gke-tom-jenkins
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: gke-tom-jenkins-6d9b9f6968
    observedGeneration: 3
    replicas: 1
    updateRevision: gke-tom-jenkins-6d9b9f6968
    updatedReplicas: 1
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      helm.sh/hook: test-success
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{"helm.sh/hook":"test-success"},"name":"gke-tom-ui-test-z1tcl","namespace":"services"},"spec":{"containers":[{"command":["/tools/bats/bin/bats","-t","/tests/run.sh"],"image":"jenkins/jenkins:2.303.1-jdk11","name":"tom-ui-test","volumeMounts":[{"mountPath":"/tests","name":"tests","readOnly":true},{"mountPath":"/tools","name":"tools"}]}],"initContainers":[{"args":["# copy bats to tools dir\nset -ex\ncp -R /opt/bats /tools/bats/\n"],"command":["bash","-c"],"image":"bats/bats:1.2.1","name":"test-framework","volumeMounts":[{"mountPath":"/tools","name":"tools"}]}],"restartPolicy":"Never","volumes":[{"configMap":{"name":"gke-tom-jenkins-tests"},"name":"tests"},{"emptyDir":{},"name":"tools"}]}}
    creationTimestamp: "2021-09-21T00:34:50Z"
    name: gke-tom-ui-test-z1tcl
    namespace: services
    resourceVersion: "76668281"
    uid: e30f5e09-9d58-4f7b-bc1d-2eb6bd7adfeb
  spec:
    containers:
    - command:
      - /tools/bats/bin/bats
      - -t
      - /tests/run.sh
      image: jenkins/jenkins:2.303.1-jdk11
      imagePullPolicy: IfNotPresent
      name: tom-ui-test
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tests
        name: tests
        readOnly: true
      - mountPath: /tools
        name: tools
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-784b2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - |
        # copy bats to tools dir
        set -ex
        cp -R /opt/bats /tools/bats/
      command:
      - bash
      - -c
      image: bats/bats:1.2.1
      imagePullPolicy: IfNotPresent
      name: test-framework
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tools
        name: tools
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-784b2
        readOnly: true
    nodeName: gke-maincluster-default-pool-e005f587-xbv1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: gke.io/optimize-utilization-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: gke-tom-jenkins-tests
      name: tests
    - emptyDir: {}
      name: tools
    - name: default-token-784b2
      secret:
        defaultMode: 420
        secretName: default-token-784b2
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-09-21T00:34:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-09-21T00:42:57Z"
      message: 'containers with unready status: [tom-ui-test]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-09-21T00:42:57Z"
      message: 'containers with unready status: [tom-ui-test]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-09-21T00:34:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://38ec4de24f50317a80b5e40b1e4c4b58111584493fe94a3c7f1392f193defb95
      image: docker.io/jenkins/jenkins:2.303.1-jdk11
      imageID: docker.io/jenkins/jenkins@sha256:a942c30fc3bcf269a1c32ba27eb4a470148eff9aba086911320031a3c3943e6c
      lastState: {}
      name: tom-ui-test
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://38ec4de24f50317a80b5e40b1e4c4b58111584493fe94a3c7f1392f193defb95
          exitCode: 1
          finishedAt: "2021-09-21T00:42:57Z"
          reason: Error
          startedAt: "2021-09-21T00:34:53Z"
    hostIP: 10.128.0.12
    initContainerStatuses:
    - containerID: containerd://7b0a07eae0a84997dbf553f2457624285459e6c2751ab124244428f4eff42e9d
      image: docker.io/bats/bats:1.2.1
      imageID: docker.io/bats/bats@sha256:2defd45426be3b5bc7415455ca529c910dab7473717eeece9c3cc26efa5ca037
      lastState: {}
      name: test-framework
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://7b0a07eae0a84997dbf553f2457624285459e6c2751ab124244428f4eff42e9d
          exitCode: 0
          finishedAt: "2021-09-21T00:34:53Z"
          reason: Completed
          startedAt: "2021-09-21T00:34:53Z"
    phase: Failed
    podIP: 10.56.0.15
    podIPs:
    - ip: 10.56.0.15
    qosClass: BestEffort
    startTime: "2021-09-21T00:34:50Z"
kind: List
metadata: {}
